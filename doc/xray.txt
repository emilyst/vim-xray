*xray.txt* Reveal non-printable characters using visual selections


            8b,     ,d8 8b,dPPYba, ,adPPYYba, 8b       d8 ~
             `Y8, ,8P'  88P'   "Y8 ""     `Y8 `8b     d8' ~
               )888(    88         ,adPPPPP88  `8b   d8'  ~
             ,d8" "8b,  88         88,    ,88   `8b,d8'   ~
            8P'     `Y8 88         `"8bbdP"Y8     Y88'    ~
                                                  d8'     ~
                                                 d8'      ~

               Reveal your non-printables in Visual mode:
           See whitespace or line-endings by selecting text!

Author:  Emily St <https://emily.st>
Repo:    https://github.com/emilyst/vim-xray
License: CC0 (Public Domain)


========================================================================
CONTENTS                                                 *xray-contents*

  1. Introduction ........................... |xray-introduction|
  1.2. How does it work? .................... |xray-how|
  2. Status ................................. |xray-status|
  3. Installing ............................. |xray-installing|
    3.1 Pathogen ............................ |xray-installing-pathogen|
    3.2 Vim Packages ........................ |xray-installing-vim|
  4. Usage .................................. |xray-usage|
  5. Configuration .......................... |xray-config|
    5.1. g:xray_enable ...................... |g:xray_enable|
    5.2. g:xray_force_redraw ................ |g:xray_force_redraw|
    5.3. g:xray_allowed_filetypes ........... |g:xray_allowed_filetypes|
    5.4. g:xray_ignored_filetypes ........... |g:xray_ignored_filetypes|
    5.5. g:xray_refresh_interval ............ |g:xray_refresh_interval|
    5.6. g:xray_space_char .................. |g:xray_space_char|
    5.7. g:xray_tab_chars ................... |g:xray_tab_chars|
    5.8. g:xray_eol_char .................... |g:xray_eol_char|
    5.9. g:xray_trail_char .................. |g:xray_trail_char|
  6. Commands ............................... |xray-commands|
    6.1. :XrayToggle ........................ |:XrayToggle|
  7. License ................................ |xray-license|
  8. Bugs ................................... |xray-bugs|
  9. Contributing ........................... |xray-contributing|
 10. Changelog .............................. |xray-changelog|


========================================================================
1. Introduction                                      *xray-introduction*

This plugin attempts to emulate a feature found in other text editors
such as Sublime Text which reveals whitespace only when it's selected.
It is a bit like setting some of the values of the 'listchars' option
on the fly for visual selections only.


------------------------------------------------------------------------
1.1. How does it work?                                        *xray-how*

    "what in the fuck"
        — Steve Losh

It's important to know what you're biting off before installing this
plugin, as it may have performance and visual implications.

Vim provides no way to know when a user has entered or left Visual mode.
For this reason, this plugin refreshes its state on a regular interval
(by default, every tenth of a second) to see if the user has entered or
left Visual mode.

To configure the refresh interval, use a setting like this in your
"$HOME/.vimrc." (The units are in milliseconds.) >

    let g:xray_refresh_interval = 100

This plugin also abuses highlighting and the 'listchars' functionality.
Behind the scenes, it swaps the 'listchars' out while in Visual mode,
and it changes the way they look so that they blend into the background
unless they're selected.


========================================================================
2. Status                                                  *xray-status*

This plugin is alpha. It's not guaranteed to work. It might break
everything.

Currently, it implements spaces, tabs, ends of lines, and trailing
whitespace.

========================================================================
3. Installing                                          *xray-installing*

This plugin requires a version of Vim of 7.4.1154 or greater. Vim must
be compiled with the "|+syntax|," "|+autocmd|," and "|+timers|"
features. (Check the output from `vim --version` or "|:version|" if
you're unsure.)

It may be installed any of the usual ways. Below are the suggested ways
for Pathogen and Vim 8's own built-in package method.


------------------------------------------------------------------------
3.1 Pathogen                                  *xray-installing-pathogen*

If you're using venerable Pathogen, clone this directory to your
bundles. >

    git clone https://github.com/emilyst/vim-xray.git \
      $HOME/.vim/bundle/vim-xray


------------------------------------------------------------------------
3.1 Vim Packages                                   *xray-installing-vim*

This is also installable as a Vim package (see |packages|) if you're
running a version of Vim greater than or equal to 8.

Vim's internal package management expects packages in the future to
include a "`start`" and an "`opt`" directory to contain its runtime
paths. As with almost every plugin written in the last decade, I have
not written mine like this. Therefore, you will need to put the entire
plugin under some arbitrary "`start`" directory whose name you probably
have already have chosen (and which doesn't matter). In the below
example, I call this directory "`default`." >

    git clone https://github.com/emilyst/vim-xray.git \
      $HOME/.vim/pack/default/start/vim-xray

========================================================================
4. Usage                                                    *xray-usage*

This plugin takes effect upon installation. To see it in action, select
some text. Look at the example GIF supplied to see how it could appear.

If you want to customize it, look at the |xray-configuration| below.


========================================================================
5. Configuration                                           *xray-config*

Settings below configure vim-xray. Each setting takes effect immediately
(or upon a mode change) unless otherwise noted. All settings are shown
with their defaults.


------------------------------------------------------------------------
5.1 g:xray_enable                                        *g:xray_enable*

Globally enables or disables all functionality. >

    let g:xray_enable = 1

If it's set to 0 when Vim starts, then the plugin never enables
entirely, as if it had been toggled off. To enable the plugin, it's not
enough to set this value to 1 -- you need to use |XrayToggle| to get
things moving.

If you set it after Vim has started, it has the effect of temporarily
nullifying the effect of the plugin without altogether disabling it. It
does not prevent the timer from firing. To do that, you need to toggle
the plugin off using |XrayToggle|.


------------------------------------------------------------------------
5.2 g:xray_force_redraw                            *g:xray_force_redraw*

Forces Vim to redraw the screen when entering or leaving Visual mode. >

    let g:xray_force_redraw = 1


------------------------------------------------------------------------
5.3 g:xray_allowed_filetypes                  *g:xray_allowed_filetypes*

List of filetypes for which the plugin is allowed. >

    let g:xray_allowed_filetypes = []

NOTE: If this is set to a non-empty value, it signifies that xray should
work ONLY for the supplied filetypes. This overrides
|g:xray_ignored_filetypes| as well.


------------------------------------------------------------------------
5.4 g:xray_ignored_filetypes                  *g:xray_ignored_filetypes*

List of filetypes for which the plugin is disabled. >

    let g:xray_ignored_filetypes = ['qf', 'nerdtree', 'tagbar']

Not used if |g:xray_allowed_filetypes| is non-empty.


------------------------------------------------------------------------
5.5 g:xray_refresh_interval                    *g:xray_refresh_interval*

How often, in milliseconds, to check which mode the user is in. >

    let g:xray_refresh_interval = 100

Smaller values appear more natural but waste more processing time.
Larger values are more efficient but may look glitchy for a moment when
leaving or entering Visual mode.


------------------------------------------------------------------------
5.6 g:xray_space_char                                *g:xray_space_char*

The character to display in place of a single space in a visual
selection. Behavior is the same as that for |lcs-space|. >

    let g:xray_space_char = '·'


------------------------------------------------------------------------
5.7 g:xray_tab_chars                                  *g:xray_tab_chars*

The characters to display in place of a single tab in a visual
selection. Behavior is the same as that for |lcs-tab|. >

    let g:xray_tab_chars = '› '


------------------------------------------------------------------------
5.8 g:xray_eol_char                                    *g:xray_eol_char*

The character to display in place of a linebreak in a visual selection.
Behavior is the same as that for |lcs-eol|. >

    let g:xray_eol_char = '¶'


------------------------------------------------------------------------
5.9 g:xray_trail_char                                *g:xray_trail_char*

The character to display in place of a trailing space in a visual
selection. Behavior is the same as that for |lcs-trail|. Note especially
that this character overrides the appearance of a space for trailing
spaces. >

    let g:xray_trail_char = '·'

========================================================================
6. Commands                                              *xray-commands*

These commands are available for controlling the plugin's behavior.


------------------------------------------------------------------------
6.1 :XrayToggle                                            *:XrayToggle*

The plugin may be entirely enabled or disabled by using the command
XrayToggle. This stops the refresh timer, so in that way, it is
different than |g:xray_enable|. >

    :XrayToggle


========================================================================
7. License                                                *xray-license*

Released into the public domain (CC0 license). For details, see:
https://creativecommons.org/publicdomain/zero/1.0/legalcode


========================================================================
8. Bugs                                                      *xray-bugs*

At this time, it's not possible to configure the color of the
'listchars' shown in a visual selection due to the hack used to make
them hide against the background outside of that selection.


========================================================================
9. Contributing                                      *xray-contributing*

To contribute to this plugin, find it on GitHub. Please see the
CONTRIBUTING file accompanying it for guidelines.

https://github.com/emilyst/vim-xray


========================================================================
10. Changelog                                           *xray-changelog*

* 2018-10-16
  * Fixed and harmonized documentation
* 2018-10-15
  * Add XrayToggle command
* 2018-10-15
  * Initial release


 vim:tw=72:ts=2:et:ft=help:norl:
